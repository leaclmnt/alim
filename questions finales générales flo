PennController.ResetPrefix(null) // Shorten command names (keep this line here)

// Show the 'intro' trial first, then all the 'experiment' trials in a random order
// then send the results and finally show the trial labeled 'bye'
Sequence( "questions_generales", SendResults() ,"bye" )


newTrial( "questions_generales" ,
    newText("<p>Veuillez renseigner votre age: </p>")
        .print()
    ,
    newTextInput("age")
        .print()
    ,
    newVar("age_participant")
        .global()
        .set(getTextInput("age"))
.log("Age", getVar("age_participant"))
    ,
    newText("sexe", "Veuillez renseigner votre sexe: ")
        //.print()
    ,
    // Give as many labels as there are buttons
    newScale("choix","Femme","Homme","Autre", "Je ne souhaite pas pr√©ciser")
        .settings.labelsPosition("top")  // Position the labels
        .settings.before( getText("sexe") )
        .print()
        ,
    newVar("sexe_participant")
        .global()
        .set(getScale("choix"))
.log("Sexe", getVar("sexe_participant"))
    ,
        // The trials are minimal: choose a socioprofessional category from a DropDown list
    newDropDown("catsociopro", "...")  //choix_bloc_1 est le nom de la liste deroulante ????
        .before( newText("Veuillez choisir votre categorie socio-professionnelle") )    // Print the sentence to the left of the list
        .add( "agriculteur-exploitant" )                //ajout dans la liste deroulante du contenu de la colonne choix_1
        .add( "artisan" )
        .add( "commercant" )
        .add( "chef d'entreprise" )
        .add( "cadre et profession intelectuelle superieure" )
        .add( "profession intermediaire" )
        .add( "employe" )
        .add( "ouvrier" )
        .add( "etudiant" )
        .add( "retraite" )
        .add( "autre" )// pb : enlever la ligne blanche pour les entrees qui apparait car il n'y a pas de 5eme entree, contrairement aux desserts
            //.once()                             // Disable the list after the first selection
        .print()
        //.setVar("categorie_socio-professionnelle_participant")                              // Make sure to log the participant's selection

    .log( "texte_a_choisir" , "Veuillez choisir votre categorie socio-professionnelle" )
    .log( "choix_1" , "agriculteur-exploitant"  )
    .log( "choix_2" , "artisan" )
    .log( "choix_3" , "commercant" )
    .log( "choix_4" , "chef d'entreprise" )
    .log( "choix_5" , "cadre et profession intelectuelle superieure" )
    .log( "choix_6" , "profession intermediaire" )
    .log( "choix_7" , "employe" )
    .log( "choix_8" , "ouvrier" )
    .log( "choix_9" , "etudiant" )
    .log( "choix_10" , "retraite" )
    .log( "choix_11" , "autre" )
    // Add these six columns to the results lines of these Template-based trials
    ,
    newVar("categorie_socio-professionnelle_participant")
        .global()
        .set(getDropDown("catsociopro"))
.log("Categorie socio-professionnelle", getVar("categorie_socio-professionnelle_participant"))
    ,
    newText("modedevie", "Vous vous sentez plutot rattaches a un mode de vie : ")
    ,
    // Give as many labels as there are buttons
    newScale("option","  Rural  ","  Urbain  ")
        .settings.labelsPosition("top")  // Position the labels
        .settings.before( getText("modedevie") )
        .print()
    ,
    newVar("mode_de_vie_participant")
        .global()
        .set(getScale("option"))
.log("Mode de vie", getVar("mode_de_vie_participant"))
    ,
    newText("sport", "A quelle frequence faites vous du sport? ")
    ,
    newScale("frequence","  Jamais  ","  Plusieurs fois par mois  ","  Une fois par semaine  ","  Plusieurs fois par semaine  ","  Tous les jours  ")
        .settings.labelsPosition("top")  // Position the labels
        .settings.before( getText("sport") )
        .print()
    ,
    newVar("pratique_sportive_participant")
        .global()
        .set(getScale("frequence"))
.log("Paratique sportive", getVar("pratique_sportive_participant"))
    ,
    newText("poids", "Etes-vous satisfaits de votre poids? ")
    ,
    newScale("satisfaction","  oui  ","  non  ")
        .settings.labelsPosition("top")  // Position the labels
        .settings.before( getText("poids") )
        .print()
        .wait()
        ,
    newVar("satisfaction_poids_participant")
        .global()
        .set(getScale("satisfaction"))
.log("Satisfaction poids", getVar("satisfaction_poids_participant"))
    ,
    newButton("Suivant")
        .print()
        .wait()
)


// Spaces and linebreaks don't matter to the script: we've only been using them for the sake of readability
newTrial( "bye" ,
    newText("Merci beaucoup pour votre participation!").print(),
    newButton().wait()  // Wait for a click on a non-displayed button = wait here forever
)
.setOption( "countsForProgressBar" , false )
// Make sure the progress bar is full upon reaching this last (non-)trial
